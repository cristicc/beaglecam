/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * Copyright (C) 2019-2021 Bootlin SAS - https://bootlin.com
 * Adapted from DT overlay sources for the 4.3" cape from Element14
 * https://www.element14.com/bbcape43
 *
 * Copyright (C) 2021 Cristian Ciocaltea <cristian.ciocaltea@gmail.com>
 * - Added support for accessing the Programmable Real-Time Units (PRU)
 * - Added workaround for HDMI conflict
 * - Added beaglecam_pins pinmux configuration
 * - Added a fixed voltage regulator to provide power-supply for backlight
 */
/dts-v1/;

#include "am335x-boneblack.dts"

/ {
	backlight {
		compatible = "pwm-backlight";
		pinctrl-names = "default";
		pinctrl-0 = <&bb_lcd_pwm_backlight_pins>;

		pwms = <&ecap2 0 500000 0>;
		pwm-names = "LCD4";
		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
				     10 11 12 13 14 15 16 17 18 19
				     20 21 22 23 24 25 26 27 28 29
				     30 31 32 33 34 35 36 37 38 39
				     40 41 42 43 44 45 46 47 48 49
				     50 51 52 53 54 55 56 57 58 59
				     60 61 62 63 64 65 66 67 68 69
				     70 71 72 73 74 75 76 77 78 79
				     80 81 82 83 84 85 86 87 88 89
				     90 91 92 93 94 95 96 97 98 99
				    100>;
		default-brightness-level = <10>;
		power-supply = <&vdd_sys_reg>;
		status = "okay";
	};

	/* Settings for NHD-4.3-ATXI#-T-1 / LCD4 cape: */
	panel {
		compatible = "ti,tilcdc,panel";
		pinctrl-names = "default";
		pinctrl-0 = <&bb_lcd_lcd_pins>;
		status = "okay";

		panel-info {
			ac-bias		= <255>;
			ac-bias-intrpt	= <0>;
			dma-burst-sz	= <16>;
			bpp		= <16>;
			fdd		= <0x80>;
			tft-alt-mode	= <0>;
			stn-565-mode	= <0>;
			mono-8bit-mode	= <0>;
			sync-edge	= <0>;
			sync-ctrl	= <1>;
			raster-order	= <0>;
			fifo-th		= <0>;
		};

		/* ILI6480 */
		display-timings {
			native-mode = <&timing0>;
			timing0: 480x272 {
				clock-frequency = <9000000>;
				hactive		= <480>;
				vactive		= <272>;
				hfront-porch	= <5>;
				hback-porch	= <40>;
				hsync-len	= <1>;
				vback-porch 	= <8>;
				vfront-porch	= <8>;
				vsync-len	= <1>;
				hsync-active	= <0>;
				vsync-active	= <0>;
			};
		};
	};

	vdd_sys_reg: regulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vdd_sys_reg";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&beaglecam_pins>;

	bb_lcd_pwm_backlight_pins: pinmux_bb_lcd_pwm_backlight_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKR, PIN_OUTPUT, MUX_MODE4)	/* mcasp0_ahclkr.eCAP2_in_PWM2_out */
		>;
	};

	bb_lcd_lcd_pins: pinmux_bb_lcd_lcd_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA0, PIN_OUTPUT, MUX_MODE0)	/* lcd_data0 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA1, PIN_OUTPUT, MUX_MODE0)	/* lcd_data1 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA2, PIN_OUTPUT, MUX_MODE0)	/* lcd_data2 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA3, PIN_OUTPUT, MUX_MODE0)	/* lcd_data3 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA4, PIN_OUTPUT, MUX_MODE0)	/* lcd_data4 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA5, PIN_OUTPUT, MUX_MODE0)	/* lcd_data5 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA6, PIN_OUTPUT, MUX_MODE0)	/* lcd_data6 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA7, PIN_OUTPUT, MUX_MODE0)	/* lcd_data7 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA8, PIN_OUTPUT, MUX_MODE0)	/* lcd_data8 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA9, PIN_OUTPUT, MUX_MODE0)	/* lcd_data9 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA10, PIN_OUTPUT, MUX_MODE0)	/* lcd_data10 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA11, PIN_OUTPUT, MUX_MODE0)	/* lcd_data11 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA12, PIN_OUTPUT, MUX_MODE0)	/* lcd_data12 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA13, PIN_OUTPUT, MUX_MODE0)	/* lcd_data13 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA14, PIN_OUTPUT, MUX_MODE0)	/* lcd_data14 */
			AM33XX_PADCONF(AM335X_PIN_LCD_DATA15, PIN_OUTPUT, MUX_MODE0)	/* lcd_data15 */
			AM33XX_PADCONF(AM335X_PIN_LCD_VSYNC, PIN_OUTPUT, MUX_MODE0)	/* lcd_vsync */
			AM33XX_PADCONF(AM335X_PIN_LCD_HSYNC, PIN_OUTPUT, MUX_MODE0)	/* lcd_hsync */
			AM33XX_PADCONF(AM335X_PIN_LCD_PCLK, PIN_OUTPUT, MUX_MODE0)	/* lcd_pclk */
			AM33XX_PADCONF(AM335X_PIN_LCD_AC_BIAS_EN, PIN_OUTPUT, MUX_MODE0) /* lcd_ac_bias_en */
		>;
	};

	beaglecam_pins: pinmux_beaglecam_pins {
		pinctrl-single,pins = <
			/* GPIO output on P9_13 to signal system boot completion */
			AM33XX_PADCONF(AM335X_PIN_GPMC_WPN, PIN_OUTPUT, MUX_MODE7)	/* gpmc_wpn.gpio0[31] */

			/* PRU1 output on P8_20 to control a diagnosis LED */
			AM33XX_PADCONF(AM335X_PIN_GPMC_CSN2, PIN_OUTPUT, MUX_MODE5)	/* gpmc_csn2.pr1_pru1_pru_r30_13 */

			/* PRU0 input on P9_31 to read camera pin D0 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_ACLKX, PIN_INPUT, MUX_MODE6)	/* mcasp0_aclkx.pr1_pru0_pru_r31_0 */

			/* PRU0 input on P9_29 to read camera pin D1 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_FSX, PIN_INPUT, MUX_MODE6)	/* mcasp0_fsx.pr1_pru0_pru_r31_1 */

			/* PRU0 input on P9_30 to read camera pin D2 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AXR0, PIN_INPUT, MUX_MODE6)	/* mcasp0_axr0.pr1_pru0_pru_r31_2 */

			/*
			 * Bit 4 of the PRU0 registers 30 & 31 (GPIO3_18) is shared
			 * with GPIO0_7 on P9_42, hence set GPIO0_7 to input mode.
			 */
			AM33XX_PADCONF(AM335X_PIN_ECAP0_IN_PWM0_OUT, PIN_INPUT, MUX_MODE7) /* eCAP0_in_PWM0_out.gpio0[7] */
			/* PRU0 input on P9_42 to read camera pin D4 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_ACLKR, PIN_INPUT, MUX_MODE6)	/* mcasp0_aclkr.pr1_pru0_pru_r31_4 */

			/* PRU0 input on P9_27 to read camera pin D5 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_FSR, PIN_INPUT, MUX_MODE6)	/* mcasp0_fsr.pr1_pru0_pru_r31_5 */

			/*
			 * Bit 6 of the PRU0 registers 30 & 31 (GPIO3_20) is shared
			 * with GPIO0_20 on P9_41, hence set GPIO0_20 to input mode.
			 */
			AM33XX_PADCONF(AM335X_PIN_XDMA_EVENT_INTR1, PIN_INPUT, MUX_MODE7) /* xdma_event_intr1.gpio0[20] */
			/* PRU0 input on P9_41 to read camera pin D6 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AXR1, PIN_INPUT, MUX_MODE6)	/* mcasp0_axr1.pr1_pru0_pru_r31_6 */

			/* PRU0 input on P9_25 to read camera pin D7 */
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKX, PIN_INPUT, MUX_MODE6)	/* mcasp0_ahclkx.pr1_pru0_pru_r31_7 */

			/* PRU0 input on P8_16 to read camera pin D3 */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD14, PIN_INPUT, MUX_MODE6)	/* gpmc_ad14.pr1_pru0_pru_r31_14 */

			/* PRU0 input on P8_15 to read camera pin PCLK */
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD15, PIN_INPUT, MUX_MODE6)	/* gpmc_ad15.pr1_pru0_pru_r31_15 */

			/* PRU0 input on P9_24 to read camera pin HREF */
			AM33XX_PADCONF(AM335X_PIN_UART1_TXD, PIN_INPUT, MUX_MODE6)	/* uart1_txd.pr1_pru0_pru_r31_16 */

			/* PRU1 input on P8_21 to read camera pin VSYNC */
			AM33XX_PADCONF(AM335X_PIN_GPMC_CSN1, PIN_INPUT, MUX_MODE6)	/* gpmc_csn1.pr1_pru1_pru_r31_12 */
		>;
	};
};

&epwmss2 {
	/* Parent to ecap */
	status = "okay";
};

&ecap2 {
	status = "okay";
};

/* Workaround for HDMI conflict */
&tda19988 { /delete-node/ ports; };
&lcdc { /delete-node/ port; };

/* PRU setup */
&pruss_tm {
	status = "okay";

	reg = <0x326004 0x4>;
	reg-names = "sysc";

	pruss: pruss@0 {
		compatible = "ti,am3356-pruss";
		reg = <0x0 0x80000>;
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		pruss_mem: memories@0 {
			reg = <0x0 0x2000>, <0x2000 0x2000>, <0x10000 0x3000>;
			reg-names = "dram0", "dram1", "shrdram2";
		};

		pruss_cfg: cfg@26000 {
			compatible = "ti,pruss-cfg", "syscon";
			#address-cells = <1>;
			#size-cells = <1>;
			reg = <0x26000 0x2000>;
			ranges = <0x00 0x26000 0x2000>;

			clocks {
				#address-cells = <1>;
				#size-cells = <0>;

				pruss_iepclk_mux: iepclk-mux@30 {
					reg = <0x30>;
					#clock-cells = <0>;
					clocks = <&l3_gclk>,	    /* icss_iep */
						 <&pruss_ocp_gclk>; /* icss_ocp */
				};
			};
		};

		pruss_iep: iep@2e000 {
			compatible = "syscon";
			reg = <0x2e000 0x31c>;
		};

		pruss_mii_rt: mii-rt@32000 {
			compatible = "ti,pruss-mii", "syscon";
			reg = <0x32000 0x58>;
		};

		pruss_mdio: mdio@32400 {
			compatible = "ti,davinci_mdio";
			reg = <0x32400 0x90>;
			clocks = <&dpll_core_m4_ck>;
			clock-names = "fck";
			bus_freq = <1000000>;
			#address-cells = <1>;
			#size-cells = <0>;
			status = "disabled";
		};

		pruss_intc: interrupt-controller@20000 {
			compatible = "ti,pruss-intc";
			reg = <0x20000 0x2000>;
			interrupts = <20 21 22 23 24 25 26 27>;
			interrupt-names = "host_intr0", "host_intr1",
					  "host_intr2", "host_intr3",
					  "host_intr4", "host_intr5",
					  "host_intr6", "host_intr7";
			interrupt-controller;
			#interrupt-cells = <3>;
		};

		pru0: pru@34000 {
			compatible = "ti,am3356-pru";
			reg = <0x34000 0x2000>,
				  <0x22000 0x400>,
				  <0x22400 0x100>;
			reg-names = "iram", "control", "debug";
			firmware-name = "am335x-pru0-fw";
			interrupt-parent = <&pruss_intc>;
			interrupts = <16 2 2>, <17 0 0>;
			interrupt-names = "vring", "kick";
		};

		pru1: pru@38000 {
			compatible = "ti,am3356-pru";
			reg = <0x38000 0x2000>,
				  <0x24000 0x400>,
				  <0x24400 0x100>;
			reg-names = "iram", "control", "debug";
			firmware-name = "am335x-pru1-fw";
			interrupt-parent = <&pruss_intc>;
			interrupts = <18 3 3>, <19 1 1>;
			interrupt-names = "vring", "kick";
		};
	};
};
